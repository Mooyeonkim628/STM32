#include "stm32f0xx.h"

extern volatile int counter;

unsigned int subfoo(unsigned int x) {
    if (x < 2)
        return 0;
    if ((x & 1) == 0)
        return 2 + subfoo(x - 1);
    return 1 + subfoo(x >> 1);
}

void enable_portb(){
    RCC->AHBENR    &= RCC_AHBENR_GPIOBEN;
}

void enable_portc(){
    RCC->AHBENR    &= RCC_AHBENR_GPIOCEN;
}

void setup_pb3(){
    GPIOB->MODER   ^= 0xc0;
    GPIOB->PUPDR   |= 0x80;
    GPIOB->PUPDR   ^= 0x40;
}

void setup_pb4(){
    GPIOB->MODER   ^= 0x300;
    GPIOB->PUPDR   ^= 0x300;
}

void setup_pc8(){
    GPIOC->MODER   |= 0x10000;
    GPIOC->MODER   ^= 0x20000;
    GPIOC->OSPEEDR |= 0x30000;
}

void setup_pc9(){
    GPIOC->MODER   |= 0x40000;
    GPIOC->MODER   ^= 0x80000;
    GPIOC->OSPEEDR |= 0x40000;
    GPIOC->OSPEEDR ^= 0x80000;
}

void action8(){
    if((GPIOB->IDR >>3 & 1) && !(GPIOB->IDR >>4 & 1))
        GPIOB->ODR ^= 0x100;
    else
        GPIOB->ODR |= 0x100;
}

void action9(){
    if(!(GPIOB->IDR >>3 & 1) && (GPIOB->IDR >>4 & 1))
        GPIOB->ODR |= 0x200;
    else
        GPIOB->ODR ^= 0x200;
}

void EXTI2_3_IRQHandler(){

}
ldr  r0, =EXTI
movs r1, #1<<3
str  r1, [r0, #PR]
ldr  r2, =counter
ldr  r3, [r2]
adds r3, #1
str  r3, [r2]
void enable_exti()
{


}

void TIM3_IRQHandler(){

}

void enable_tim3()
{


}
